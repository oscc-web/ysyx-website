import{aS as e,W as t,X as r,Z as s}from"./framework-e810521c.js";const i={},o=s('<h2 id="第一期" tabindex="-1"><a class="header-anchor" href="#第一期" aria-hidden="true">#</a> 第一期</h2><p>2019年8月27日，中国科学院大学的5位2016级本科生与教学团队在包云岗老师的办公室里开了一次气氛轻松但意义重大的动员大会，会上讨论制订了处理器芯片总体设计方案，确定了技术路线、基础平台、开发环境、流片工艺等内容，至此<strong>第一期“一生一芯”计划正式启动</strong>。随后在4个月高强度的开发过程中，5位同学在教学团队的带领下负责实现处理器芯片各个核心功能模块，尽管很多专业知识是课堂上没有介绍过的，但是学生们通过查阅资料独立解决了开发中所遇到的各种问题。最终经过学生们和教学团队的共同努力，第一期“一生一芯”处理器芯片顺利被点亮，<strong>能够成功运行GNU/Linux操作系统并在终端中打印国科大的Logo</strong>。</p><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-1.1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-1.2.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第二期" tabindex="-1"><a class="header-anchor" href="#第二期" aria-hidden="true">#</a> 第二期</h2><p>第二期“一生一芯”计划于2020年秋季正式启动，<strong>学生组成不再仅限于中国科学院大学的在校本科生</strong>，而是成功吸引了来自浙江大学、南京大学、西北工业大学、哈尔滨工业大学（深圳）等高校的共11名优秀同学的报名加入。除参与计划人数增加以外，第二期“一生一芯”教学团队的人员配置也得到了进一步升级，计算所和浙大2位老师加入教学团队，6位2016级国科大本科生担任助教（包括第一期“一生一芯”计划的5位同学以及1位负责FPGA仿真平台的同学），为本期同学在关键开发节点提供技术指导。最终经过几个月的独立开发与调试验证，<strong>11名同学全部完成了处理器核设计并进行了流片</strong>。</p><h2 id="第三期" tabindex="-1"><a class="header-anchor" href="#第三期" aria-hidden="true">#</a> 第三期</h2><p>第三期“一生一芯”计划于2021年7月7日正式启动，力求把处理器芯片设计人才培养与开源处理器芯片生态构建结合起来，<strong>培养既掌握处理器芯片架构设计领域知识，又具备处理器芯片设计制造全流程经验的专业人才</strong>。第三期报名人数总计为760人，参加学生覆盖168所国内外高校（含国外30所）。从学生的角度统计，在报名人数中，在校生共625人，占比82%；同时较多已毕业的学生也对处理器芯片设计感兴趣。在校生中，本硕博各年级均有分布，其中本科生占比44%，硕士生占比50%，硕博士占比6%。从年级细分来看，报名最多的五个年级分别是：研一（27%），大三（23%），研二（14%），大二（11%），大四（7%）。从报名数据上看，<strong>第三期“一生一芯”计划已正式进入到跨区域大规模人才培训阶段</strong>。</p><p>为了应对大规模人才培养所带来的人力成本上的巨大挑战，项目组<strong>首次尝试建立了一套“让学生指导学生”的教学流程</strong>。讲座答疑、进度检查、SoC集成验证和后端物理设计等内容全部由学生们独立完成，工程师仅在最后阶段参与芯片后端的检视工作并提出改进的建议，这不仅从根本上解决了师资力量供需不平衡的问题，同时也培养了一批技术水平出色且心理素质过硬的助教团队，为后续推动“一生一芯“计划向前发展奠定了坚实的基础。前端助教共计27人，主要负责准备讲义和其他辅助材料，组织报告和答疑，并跟进学生的学习情况；SoC团队共计4人，主要负责收集学生提交的处理器代码并进行SoC集成和集成后的验证工作；IC后端团队共5人，主要负责芯片的物理设计，生成可流片的GDSII版图。在上述流程的支撑下，本期流片学生人数达到了50余人。</p><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-3.1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-3.2.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-3.3.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第四期" tabindex="-1"><a class="header-anchor" href="#第四期" aria-hidden="true">#</a> 第四期</h2><p>在汲取参与第三期计划各同学所总结的宝贵经验之后，项目团队对第四期“一生一芯”计划的目标进行了梳理，明确了“一生一芯”计划的三步走战略，第一步是打破教育资源不平衡的壁垒，让那些对处理器芯片设计非常感兴趣的双非高校学生也能有机会参与到处理器芯片全流程学习中来，这对提升我国高校处理器芯片教育的普及有着非常重要且积极的意义；第二步是突破传统课程的边界，融合EE和CS的全栈人才培养。<strong>第四期“一生一芯”计划的核心是要构建一套软硬件协同设计理念并将其贯穿到整个处理器芯片教学流程中</strong>，让学生们不仅明白如何用代码设计处理器芯片，还要了解处理器芯片是如何被制作出来的，即处理器芯片从设计到制造全流程；第三步是鼓励参加过计划的同学进入软硬件开源社区，努力攻克我国目前亟需解决的各个卡脖子领域，最终通过关键领域的重大突破来吸引更多学生参与到“一生一芯”计划的学习中，从而实现一个良性的正向循环。</p><p>第四期“一生一芯”报名人数为1753人，覆盖国内外共328所高校，报名人数相较上期增长130.0%，高校覆盖增长率为95.2%，说明随着第三期“一生一芯”计划的开展，有更多的学生认可教学团队提出的大规模人才培养方案，教学规模开始逐步扩大。第四期“一生一芯”计划分为四个培养阶段，其中学习到B阶段的总计98人，学习到A阶段的总计101人，通过答辩完成流片的总计16人，持续学习人数总计215人，在提升学习难度的情况下，本期持续学习人数与上期基本保持持平，而且随着学习阶段的深入，本科生和研究生的人数并没有出现明显的一边倒情况，这说明<strong>无论是刚接触专业知识的零基础学生，还是已经从事相关领域研究工作的学者，都能很好地适应“一生一芯”所提供的培养方案</strong>。</p><figure><img src="https://raw.githubusercontent.com/oscc-ysyx-web-project/ysyx-website-resources/main/images/project-intro-process-4.1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="第五期" tabindex="-1"><a class="header-anchor" href="#第五期" aria-hidden="true">#</a> 第五期</h2><p>未完待续</p>',18),a=[o];function n(c,g){return t(),r("div",null,a)}const h=e(i,[["render",n],["__file","project-intro-past.html.vue"]]);export{h as default};
